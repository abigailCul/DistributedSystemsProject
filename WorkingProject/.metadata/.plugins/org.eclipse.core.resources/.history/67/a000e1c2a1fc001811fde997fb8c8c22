package ie.gmit.sw.ds.db;

import java.rmi.RemoteException;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

import ie.gmit.sw.ds.models.Accounts;
import ie.gmit.sw.ds.models.Cars;
import ie.gmit.sw.ds.models.Booking;

public class mySQL_DAO implements mySQLDAOInterface {
	
	private String url = "jdbc:mysql://localhost:3306/booking_system?useSSL=false";

	public ArrayList<Booking> getRental() throws RemoteException {

		ArrayList<Booking> rentalList = new ArrayList<>();

		try (

				Connection conn = DriverManager.getConnection(url, "root", "");
				Statement stmt = conn.createStatement();)
		{
			String strSelect = "select a.acc_no , a.first_name, a.surname,"
					+ "c.car_make, c.car_model, r.rental_date, r.return_date from booking r "
					+ "inner join accounts a on r.acc_no = a.acc_no inner join cars c "
					+ "on r.rental_id = c.rental_id;";

			ResultSet rset = stmt.executeQuery(strSelect);

			while (rset.next()) { // Move the cursor to the next row, return false if no more row

				Booking rental = new Booking();
				Accounts accounts = new Accounts();
				Cars cars = new Cars();

				accounts.setAccNo(String.valueOf(rset.getInt("acc_no")));
				accounts.setFname(rset.getString("first_name"));
				accounts.setSurname(rset.getString("surname"));
				cars.setCarMake(rset.getString("car_make"));
				cars.setCarMake(rset.getString("car_model"));
				rental.setRentalDate(rset.getString("rental_date"));
				rental.setReturnDate(rset.getString("return_date"));
				rental.setAccounts(accounts);
				rental.setCars(cars);

				System.out.println(rental.getAccounts().getFname());
				
				rentalList.add(rental);
			}
			
			System.out.println(rentalList.get(0).getAccounts().getAccNo());
			
		} catch (SQLException ex) {
			ex.printStackTrace();
		}
		System.out.println("Data successfully pull from db..");
		return rentalList;
	}
	
	public Boolean createAccount(Booking a) {
		
		try (

				Connection conn = DriverManager.getConnection(url, "root", "");

				Statement stmt = conn.createStatement();)
		{
			
			// INSERT a record
	         String sqlInsert = "insert into accounts " // need a space
	               + "values ('"+a.getAccounts().getAccNo() + "','" + a.getAccounts().getFname() + "','" 
	        		 + a.getAccounts().getSurname() + "');";
	         
	         System.out.println("The SQL query is: " + sqlInsert);  // Echo for debugging
	         int countInserted = stmt.executeUpdate(sqlInsert);
	         
	         System.out.println(countInserted + " records inserted.\n");
	         
	         return true;
	         
		}catch (Exception e) {
			return false;
		}
	}

	public int deleteBooking(int num) {
		

		try (

				Connection conn = DriverManager.getConnection(url, "root", "");

				Statement stmt = conn.createStatement();)
		{
		// Delete a record
	
        String sqlDelete = "delete from booking where " // need a space
              + "values ('"+ num.getId() + "');";
        
        
        System.out.println("The SQL query is: " + sqlDelete);  // Echo for debugging
        int countDeleted = stmt.executeUpdate(sqlDelete);
        
        System.out.println(countDeleted + " records dleted.\n");
        
	}catch (Exception e) {
	}
		return 0;
	
	}
}
